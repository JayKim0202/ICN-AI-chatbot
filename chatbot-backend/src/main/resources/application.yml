spring.application.name: chatbot-backend

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  # dev ??? update / ??? validate ?? none
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

  data:
    mongodb:
      uri: ${MONGO_DB_URI}

    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      database: ${REDIS_DB}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access-token-validity: 3600000
  refresh-token-validity: 1209600000

---
spring:
  config:
    activate:
      on-profile: local-ssl

server:
  port: 8443  # HTTPS는 보통 443, 8443 포트를 사용
  ssl:
    enabled: true
    key-store: classpath:keystore.p12  # resources 폴더의 인증서 파일 경로
    key-store-password: qwer1234        # keytool에서 설정한 비밀번호
    key-store-type: PKCS12
    key-alias: tomcat                # keytool에서 설정한 별칭

logging:
  level:
    root: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
