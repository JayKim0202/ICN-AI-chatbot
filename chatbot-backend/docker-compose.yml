# Docker Compose 버전 정의
version: '3.8'

# 실행할 서비스(컨테이너)들 정의
services:
  # Spring Boot 애플리케이션 서비스
  chatbot-backend:
    build: . # 현재 디렉토리의 Dockerfile을 사용하여 이미지를 빌드
    container_name: chatbot-backend
    restart: always
    env_file:
      - .env # .env 파일의 환경 변수를 컨테이너에 주입
    ports:
      - "8080:8080" # 로컬 8080 포트와 컨테이너 8080 포트를 연결
    depends_on:
      - postgres-db # postgres-db 서비스가 먼저 시작되도록 설정
      - mongo-db
      - redis-db

  # PostgreSQL 서비스
  postgres-db:
    image: postgres:16  # PostgreSQL 16 버전 이미지 사용
    container_name: postgres-db
    restart: always # 컨테이너가 꺼지면 항상 다시 시작
    environment:
      POSTGRES_DB: ${DB_NAME}       # .env 파일과 동일하게 설정
      POSTGRES_USER: ${DB_USERNAME}   # .env 파일과 동일하게 설정
      POSTGRES_PASSWORD: ${DB_PASSWORD} # .env 파일과 동일하게 설정
    ports:
      - "5432:5432" # 내 컴퓨터의 5432 포트와 컨테이너의 5432 포트를 연결

  # MongoDB 서비스
  mongo-db:
    image: mongo:7 # MongoDB 7 버전 이미지 사용
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017" # 내 컴퓨터의 27017 포트와 컨테이너의 27017 포트를 연결

  # Redis 서비스
  redis-db:
    image: redis:7 # Redis 7 버전 이미지 사용
    container_name: redis-db
    restart: always
    ports:
      - "6379:6379" # 내 컴퓨터의 6379 포트와 컨테이너의 6379 포트를 연결