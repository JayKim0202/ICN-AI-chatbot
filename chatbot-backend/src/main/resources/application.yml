# ======================================================
# 공통 설정 (기본 루트 spring 키 한 번만 사용)
# ======================================================
spring:
  application:
    name: chatbot-backend

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 3       # 연결 풀 최대 크기 (3개로 제한)
      minimum-idle: 1            # 최소 유휴 연결 (필요할 때만 생성)
      idle-timeout: 30000        # 30초 이상 안 쓰면 연결 반납
      max-lifetime: 1800000      # 30분마다 커넥션 새로고침 (DB idle timeout 회피용)
      connection-timeout: 20000  # 20초 안에 연결 못 잡으면 에러 반환

  data:
    mongodb:
      uri: ${MONGO_DB_URI}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access-token-validity: 3600000
  refresh-token-validity: 1209600000

logging:
  level:
    root: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

ai-server:
  url: ${AI_SERVER_URL}

frontend:
  url: ${FRONTEND_URL}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true

super:
  admin:
    id: ${SUPER_ADMIN_ID}
    password: ${SUPER_ADMIN_PASSWORD}
    name: ${SUPER_ADMIN_NAME}

---

# ======================================================
# default 프로필
# ======================================================
spring:
  config:
    activate:
      on-profile: default
  jpa:
    hibernate:
      ddl-auto: validate

---

# ======================================================
# local-ssl 프로필 (8443 + SSL)
# ======================================================
spring:
  config:
    activate:
      on-profile: local-ssl
  jpa:
    hibernate:
      ddl-auto: validate

server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: ${PASSWORD}
    key-store-type: PKCS12
    key-alias: tomcat

---

# ======================================================
# prod 프로필
# ======================================================
spring:
  config:
    activate:
      on-profile: prod
  data:
    redis:
      client-type: jedis
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: true
  jpa:
    hibernate:
      ddl-auto: validate
